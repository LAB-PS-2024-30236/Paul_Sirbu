{"ast":null,"code":"import { createSelector } from 'reselect';\nconst selectShop = state => state.shop;\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections],\n// Convert from object to array. (to use `.map` in `collectionsOverview`)\n// Object.keys: Convert keys to array\ncollections => collections ? Object.keys(collections).map(key => collections[key]) : []);\n// Curried function. This is function returns function\n// collectionUrlParam: Get from URL\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections],\n// Look for state of `collections` >> state.collections.ValueOfCollectionUrlParam\ncollections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectShop],\n//!!\"\" : false, !!{}: true\nshop => !!shop.collections);\n\n/*\n\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\n  export const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    // find: returns `true`\n    // Look for state of `collections` >> state.collections.xxx\n    collections =>\n      collections.find(\n        collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n      )\n  );\n  */","map":{"version":3,"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/redux/shop/shop.selectors.js"],"sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n\n  // Convert from object to array. (to use `.map` in `collectionsOverview`)\n  // Object.keys: Convert keys to array\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n// Curried function. This is function returns function\n// collectionUrlParam: Get from URL\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    // Look for state of `collections` >> state.collections.ValueOfCollectionUrlParam\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionLoaded = createSelector(\n  [selectShop],\n  //!!\"\" : false, !!{}: true\n  shop => !!shop.collections\n);\n\n/*\n\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n};\n\n  export const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    // find: returns `true`\n    // Look for state of `collections` >> state.collections.xxx\n    collections =>\n      collections.find(\n        collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n      )\n  );\n  */\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;AAEzC,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAI;AAEtC,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAU,CAAC,EACZE,IAAI,IAAIA,IAAI,CAACE,WACf,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAiB,CAAC;AAEnB;AACA;AACAC,WAAW,IACTA,WAAW,GAAGE,MAAM,CAACC,IAAI,CAACH,WAAW,CAAC,CAACI,GAAG,CAACC,GAAG,IAAIL,WAAW,CAACK,GAAG,CAAC,CAAC,GAAG,EAC1E,CAAC;AACD;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CACZ,CAACI,iBAAiB,CAAC;AACnB;AACAC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAkB,CAAC,GAAG,IAClE,CAAC;AAEH,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtD,CAACC,UAAU,CAAC,EACZE,IAAI,IAAIA,IAAI,CAACW,UACf,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAGf,cAAc,CACpD,CAACC,UAAU,CAAC;AACZ;AACAE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}