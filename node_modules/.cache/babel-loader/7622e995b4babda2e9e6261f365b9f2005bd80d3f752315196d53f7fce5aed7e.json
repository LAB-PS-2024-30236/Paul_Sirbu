{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n// Firebase SDK snippet\nconst config = {\n  apiKey: 'AIzaSyCXDJc3Yg9ISFh-eiA_dfCEM31yCfi4r40',\n  authDomain: 'crwn-db-1210.firebaseapp.com',\n  databaseURL: 'https://crwn-db-1210.firebaseio.com',\n  projectId: 'crwn-db-1210',\n  storageBucket: '',\n  messagingSenderId: '711115196794',\n  appId: '1:711115196794:web:0ea16aef3f4a6411'\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  // Document ref >> DocumentSnapshot: .get(), .set(), .update(), .delete\n  // Collection ref >> querySnapshot: .add(), .get()\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  // !snapShot.exist: If data is not exist => User haven't sign up yet => Add in collection\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  // batch: group all calls together into one big request\n  const batch = firestore.batch();\n  // ForEach(): Same as map(), but not return a new array\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//Google auth\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export whole library\nexport default firebase;","map":{"version":3,"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/firebase/firebase.utils.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\n// Firebase SDK snippet\nconst config = {\n    apiKey: 'AIzaSyCXDJc3Yg9ISFh-eiA_dfCEM31yCfi4r40',\n    authDomain: 'crwn-db-1210.firebaseapp.com',\n    databaseURL: 'https://crwn-db-1210.firebaseio.com',\n    projectId: 'crwn-db-1210',\n    storageBucket: '',\n    messagingSenderId: '711115196794',\n    appId: '1:711115196794:web:0ea16aef3f4a6411'\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    // Document ref >> DocumentSnapshot: .get(), .set(), .update(), .delete\n    // Collection ref >> querySnapshot: .add(), .get()\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    // !snapShot.exist: If data is not exist => User haven't sign up yet => Add in collection\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n\n    return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n    collectionKey,\n    objectsToAdd\n) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    // batch: group all calls together into one big request\n    const batch = firestore.batch();\n    // ForEach(): Same as map(), but not return a new array\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n    return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n    const transformedCollection = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        };\n    });\n    return transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n//Google auth\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export whole library\nexport default firebase;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}