{"ast":null,"code":"var _jsxFileName = \"/Users/paulsirbu/WebstormProjects/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentForm, setCurrentForm] = useState('login');\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState('light'); // State for theme\n\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n  const handleLogin = async userData => {\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      // Handle successful login\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      const response = await fetch('http://localhost:8080/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      // Handle successful registration\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light'); // Toggle between light and dark themes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${theme === 'light' ? 'light-theme' : 'dark-theme'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-theme-btn\",\n      onClick: toggleTheme,\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), currentForm === \"login\" ? /*#__PURE__*/_jsxDEV(Login, {\n      onFormSwitch: toggleForm,\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onFormSwitch: toggleForm,\n      onRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"tQpFEIzX0yj5Je4yUg8JQ+gFlnI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","Login","Register","jsxDEV","_jsxDEV","App","_s","currentForm","setCurrentForm","error","setError","theme","setTheme","toggleForm","formName","handleLogin","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","message","handleRegister","toggleTheme","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onFormSwitch","onLogin","onRegister","_c","$RefreshReg$"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\n\nfunction App() {\n    const [currentForm, setCurrentForm] = useState('login');\n    const [error, setError] = useState(null);\n    const [theme, setTheme] = useState('light'); // State for theme\n\n    const toggleForm = (formName) => {\n        setCurrentForm(formName);\n    }\n\n    const handleLogin = async (userData) => {\n        try {\n            const response = await fetch('http://localhost:8080/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n            if (!response.ok) {\n                throw new Error('Login failed');\n            }\n            // Handle successful login\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const handleRegister = async (userData) => {\n        try {\n            const response = await fetch('http://localhost:8080/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n            if (!response.ok) {\n                throw new Error('Registration failed');\n            }\n            // Handle successful registration\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleTheme = () => {\n        setTheme(theme === 'light' ? 'dark' : 'light'); // Toggle between light and dark themes\n    }\n\n    return (\n        <div className={`App ${theme === 'light' ? 'light-theme' : 'dark-theme'}`}>\n            <button className=\"toggle-theme-btn\" onClick={toggleTheme}>Toggle Theme</button>\n            {\n                currentForm === \"login\" ?\n                    <Login onFormSwitch={toggleForm} onLogin={handleLogin} /> :\n                    <Register onFormSwitch={toggleForm} onRegister={handleRegister} />\n            }\n            {error && <div>Error: {error}</div>}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}