{"ast":null,"code":"/*\nreducer: function\ntype (case): action name\npayload: update state\ndefault: `return state` if incoming action type is not related\n*/\n\nimport { UserActionTypes } from './user.types';\n\n// default state\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\n// state: 1. previous/current state 2. default value(ES6)\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["UserActionTypes","INITIAL_STATE","currentUser","userReducer","state","action","type","SET_CURRENT_USER","payload"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/redux/user/user.reducer.js"],"sourcesContent":["/*\nreducer: function\ntype (case): action name\npayload: update state\ndefault: `return state` if incoming action type is not related\n*/\n\nimport { UserActionTypes } from './user.types';\n\n// default state\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\n// state: 1. previous/current state 2. default value(ES6)\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAe,QAAQ,cAAc;;AAE9C;AACA,MAAMC,aAAa,GAAG;EACpBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,aAAa,EAAEI,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,eAAe,CAACO,gBAAgB;MACnC,OAAO;QACL,GAAGH,KAAK;QACRF,WAAW,EAAEG,MAAM,CAACG;MACtB,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}