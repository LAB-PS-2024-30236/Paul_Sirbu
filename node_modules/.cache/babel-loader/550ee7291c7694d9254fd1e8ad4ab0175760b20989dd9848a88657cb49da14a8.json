{"ast":null,"code":"var _jsxFileName = \"/Users/paulsirbu/WebstormProjects/frontend/src/components/cart-dropdown/CartDropdown.js\";\nimport React from 'react';\nimport CustomButton from '../custom-button/CustomButton';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/CartItem';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './CartDropdown.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => {\n        history.push('/checkout');\n        dispatch(toggleCartHidden());\n      },\n      children: \"Go TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\n// Work even not writing `mapDispatchToProps` because `connect` automatically pass the `dispatch` if there is no second args in `connect`.\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\nvar _c;\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"names":["React","CustomButton","connect","withRouter","CartItem","selectCartItems","createStructuredSelector","toggleCartHidden","jsxDEV","_jsxDEV","CartDropdown","cartItems","history","dispatch","className","children","length","map","cartItem","item","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","push","_c","mapStateToProps","$RefreshReg$"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/components/cart-dropdown/CartDropdown.js"],"sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/CustomButton';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport CartItem from '../cart-item/CartItem';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './CartDropdown.scss';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => {\n    return (\n        <div className='cart-dropdown'>\n            <div className='cart-items'>\n                {cartItems.length ? (\n                    cartItems.map(cartItem => (\n                        <CartItem key={cartItem.id} item={cartItem} />\n                    ))\n                ) : (\n                    <span className='empty-message'>Your cart is empty</span>\n                )}\n            </div>\n            {/* `history.push` instead of `<Link>` because using `<CustomButton>` */}\n            <CustomButton\n                onClick={() => {\n                    history.push('/checkout');\n                    dispatch(toggleCartHidden());\n                }}\n            >\n                Go TO CHECKOUT\n            </CustomButton>\n        </div>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n});\n\n// Work even not writing `mapDispatchToProps` because `connect` automatically pass the `dispatch` if there is no second args in `connect`.\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,+BAA+B;AACxD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,wBAAwB,QAAQ,UAAU;AACnD,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EACvD,oBACIJ,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BN,OAAA;MAAKK,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBJ,SAAS,CAACK,MAAM,GACbL,SAAS,CAACM,GAAG,CAACC,QAAQ,iBAClBT,OAAA,CAACL,QAAQ;QAAmBe,IAAI,EAAED;MAAS,GAA5BA,QAAQ,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAChD,CAAC,gBAEFf,OAAA;QAAMK,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAC3D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAENf,OAAA,CAACR,YAAY;MACTwB,OAAO,EAAEA,CAAA,KAAM;QACXb,OAAO,CAACc,IAAI,CAAC,WAAW,CAAC;QACzBb,QAAQ,CAACN,gBAAgB,CAAC,CAAC,CAAC;MAChC,CAAE;MAAAQ,QAAA,EACL;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAACG,EAAA,GAvBIjB,YAAY;AAyBlB,MAAMkB,eAAe,GAAGtB,wBAAwB,CAAC;EAC7CK,SAAS,EAAEN;AACf,CAAC,CAAC;;AAEF;AACA,eAAeF,UAAU,CAACD,OAAO,CAAC0B,eAAe,CAAC,CAAClB,YAAY,CAAC,CAAC;AAAC,IAAAiB,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}