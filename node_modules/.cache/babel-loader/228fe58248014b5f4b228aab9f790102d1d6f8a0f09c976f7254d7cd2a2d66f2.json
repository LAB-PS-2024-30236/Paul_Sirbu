{"ast":null,"code":"var _jsxFileName = \"/Users/paulsirbu/WebstormProjects/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentForm, setCurrentForm] = useState(\"login\");\n  const [error, setError] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentTheme, setCurrentTheme] = useState(\"theme-1\"); // Add state for current theme\n\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n  const handleLogin = async userData => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Login failed\");\n      }\n      setIsLoggedIn(true);\n      fetchProducts(); // Fetch products after successful login\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Registration failed\");\n      }\n      setIsLoggedIn(true);\n      fetchProducts(); // Fetch products after successful registration\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/product/getallproducts\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch products\");\n      }\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchProducts();\n    }\n  }, [isLoggedIn]);\n  const toggleTheme = () => {\n    setCurrentTheme(prevTheme => {\n      return prevTheme === \"theme-1\" ? \"theme-2\" : \"theme-1\";\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${currentTheme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle-btn\",\n      onClick: toggleTheme,\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), \" \", isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome User!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.shortDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [currentForm === \"login\" ? /*#__PURE__*/_jsxDEV(Login, {\n        onFormSwitch: toggleForm,\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onFormSwitch: toggleForm,\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"eiE8P16mjA9so8b+wrTtqXMzP2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","Login","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentForm","setCurrentForm","error","setError","products","setProducts","isLoggedIn","setIsLoggedIn","currentTheme","setCurrentTheme","toggleForm","formName","handleLogin","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","fetchProducts","message","handleRegister","data","json","toggleTheme","prevTheme","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","product","name","shortDescription","price","id","onFormSwitch","onLogin","onRegister","_c","$RefreshReg$"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\n\nfunction App() {\n    const [currentForm, setCurrentForm] = useState(\"login\");\n    const [error, setError] = useState(null);\n    const [products, setProducts] = useState([]);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [currentTheme, setCurrentTheme] = useState(\"theme-1\"); // Add state for current theme\n\n    const toggleForm = (formName) => {\n        setCurrentForm(formName);\n    };\n\n    const handleLogin = async (userData) => {\n        try {\n            const response = await fetch(\"http://localhost:8080/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(userData),\n            });\n            if (!response.ok) {\n                throw new Error(\"Login failed\");\n            }\n            setIsLoggedIn(true);\n            fetchProducts(); // Fetch products after successful login\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const handleRegister = async (userData) => {\n        try {\n            const response = await fetch(\"http://localhost:8080/auth/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(userData),\n            });\n            if (!response.ok) {\n                throw new Error(\"Registration failed\");\n            }\n            setIsLoggedIn(true);\n            fetchProducts(); // Fetch products after successful registration\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const fetchProducts = async () => {\n        try {\n            const response = await fetch(\"http://localhost:8080/product/getallproducts\");\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch products\");\n            }\n            const data = await response.json();\n            setProducts(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            fetchProducts();\n        }\n    }, [isLoggedIn]);\n\n    const toggleTheme = () => {\n        setCurrentTheme((prevTheme) => {\n            return prevTheme === \"theme-1\" ? \"theme-2\" : \"theme-1\";\n        });\n    };\n\n    return (\n        <div className={`App ${currentTheme}`}>\n            <button className=\"theme-toggle-btn\" onClick={toggleTheme}>Toggle Theme</button> {/* Move the toggle theme button to the top right corner */}\n            {isLoggedIn ? (\n                <div>\n                    <h2>Welcome User!</h2>\n                    <h3>Product List</h3>\n                    <ul>\n                        {products.map((product) => (\n                            <li key={product.id}>\n                                <h3>{product.name}</h3>\n                                <p>{product.shortDescription}</p>\n                                <p>{product.price}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            ) : (\n                <>\n                    {currentForm === \"login\" ? (\n                        <Login onFormSwitch={toggleForm} onLogin={handleLogin} />\n                    ) : (\n                        <Register onFormSwitch={toggleForm} onRegister={handleRegister} />\n                    )}\n                    {error && <div>Error: {error}</div>}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}