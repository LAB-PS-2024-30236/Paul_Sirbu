{"ast":null,"code":"var _jsxFileName = \"/Users/paulsirbu/WebstormProjects/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentForm, setCurrentForm] = useState(\"login\");\n  const [error, setError] = useState(null);\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n  const handleLogin = async userData => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Login failed\");\n      }\n      // Handle successful login\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Registration failed\");\n      }\n      // Handle successful registration\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg bg2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg bg3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [currentForm === \"login\" ? /*#__PURE__*/_jsxDEV(Login, {\n        onFormSwitch: toggleForm,\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onFormSwitch: toggleForm,\n        onRegister: handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"1cM03v9pItiZP8xjy/htqk5WgUg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","Login","Register","jsxDEV","_jsxDEV","App","_s","currentForm","setCurrentForm","error","setError","toggleForm","formName","handleLogin","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","message","handleRegister","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFormSwitch","onLogin","onRegister","_c","$RefreshReg$"],"sources":["/Users/paulsirbu/WebstormProjects/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\n\nfunction App() {\n    const [currentForm, setCurrentForm] = useState(\"login\");\n    const [error, setError] = useState(null);\n\n    const toggleForm = (formName) => {\n        setCurrentForm(formName);\n    };\n\n    const handleLogin = async (userData) => {\n        try {\n            const response = await fetch(\"http://localhost:8080/auth/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(userData),\n            });\n            if (!response.ok) {\n                throw new Error(\"Login failed\");\n            }\n            // Handle successful login\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const handleRegister = async (userData) => {\n        try {\n            const response = await fetch(\"http://localhost:8080/auth/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(userData),\n            });\n            if (!response.ok) {\n                throw new Error(\"Registration failed\");\n            }\n            // Handle successful registration\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"bg\"></div>\n            <div className=\"bg bg2\"></div>\n            <div className=\"bg bg3\"></div>\n            <div className=\"content\">\n                {currentForm === \"login\" ? (\n                    <Login onFormSwitch={toggleForm} onLogin={handleLogin} />\n                ) : (\n                    <Register onFormSwitch={toggleForm} onRegister={handleRegister} />\n                )}\n                {error && <div>Error: {error}</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}